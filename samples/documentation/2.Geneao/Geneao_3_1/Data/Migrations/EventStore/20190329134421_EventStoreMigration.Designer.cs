// <auto-generated />
using System;
using CQELight.EventStore.EFCore.Common;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Geneao.Data.Migrations.EventStore
{
    [DbContext(typeof(EventStoreDbContext))]
    [Migration("20190329134421_EventStoreMigration")]
    partial class EventStoreMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.3-servicing-35854");

            modelBuilder.Entity("CQELight.EventStore.EFCore.Models.Event", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("AggregateIdType");

                    b.Property<string>("AggregateType")
                        .HasMaxLength(1024);

                    b.Property<string>("EventData")
                        .IsRequired();

                    b.Property<DateTime>("EventTime");

                    b.Property<string>("EventType")
                        .IsRequired()
                        .HasMaxLength(1024);

                    b.Property<int?>("HashedAggregateId");

                    b.Property<long>("Sequence");

                    b.Property<string>("SerializedAggregateId");

                    b.HasKey("Id");

                    b.HasIndex("EventType");

                    b.HasIndex("HashedAggregateId", "AggregateType");

                    b.ToTable("Event");
                });

            modelBuilder.Entity("CQELight.EventStore.EFCore.Models.Snapshot", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("AggregateType")
                        .HasMaxLength(1024);

                    b.Property<int>("HashedAggregateId");

                    b.Property<string>("SnapshotBehaviorType");

                    b.Property<string>("SnapshotData")
                        .IsRequired();

                    b.Property<DateTime>("SnapshotTime");

                    b.HasKey("Id");

                    b.HasIndex("HashedAggregateId", "AggregateType");

                    b.ToTable("Snapshot");
                });
#pragma warning restore 612, 618
        }
    }
}
